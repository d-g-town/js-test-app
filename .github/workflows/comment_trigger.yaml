name: Review Command
on:
  issue_comment:
    types: [created]

jobs:
  handle-review-command:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/review') }}
    runs-on: ubuntu-latest
    steps:
      - name: Start check run
        id: create-check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const { data: check } = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Review Status',
              head_sha: pr.head.sha,
              status: 'in_progress',
              started_at: new Date().toISOString(),
              output: {
                title: 'Processing Review Request',
                summary: 'Processing /review command...'
              }
            });
            
            return check.id;

      - name: Add label and comment
        uses: actions/github-script@v7
        with:
          script: |
            // Add the review label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['needs-review']
            });
            
            // Add the comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'ðŸ‘€ Review requested! I've added the needs-review label.'
            });

      - name: Complete check run
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Review Status',
              head_sha: pr.head.sha,
              status: 'completed',
              conclusion: 'success',
              completed_at: new Date().toISOString(),
              output: {
                title: 'Review Requested',
                summary: 'Review has been requested successfully via /review command'
              }
            });
